<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:property-placeholder location="classpath:/properties/app.properties"/>
	<!--
		CSRF protection. Here we only include the CsrfFilter instead of all of Spring Security.
		See http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/#csrf for more information on
		Spring Security's CSRF protection
	-->
	<bean id="csrfFilter" class="org.springframework.security.web.csrf.CsrfFilter">
		<constructor-arg>
			<bean class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository"/>
		</constructor-arg>
	</bean>


	<bean id="passwordDecrypter"
		  class="com.znz.util.PasswordDecrypter">
		<constructor-arg index="0">
			<value>d073c52a75a56dfe37402c3cedd9b4f7</value>
		</constructor-arg>
	</bean>


	<context:component-scan base-package="com.znz.config"/>
    <context:component-scan base-package="com.znz.timer"/>
<!--	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		&lt;!&ndash; 基本属性 url、user、password &ndash;&gt;
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="znz" />
		<property name="password" value="6730011asa" />

		&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;
		<property name="maxWait" value="60000" />

		&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

		&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;
		<property name="filters" value="stat" />
	</bean>-->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="znz" />
		<property name="password" value="6730011asa" />
		<property name="initialSize" value="2" />
		<property name="maxActive" value="20" />
		<property name="maxWait" value="1000" />
		<property name="testOnBorrow" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="10000" />
		<property name="numTestsPerEvictionRun" value="3" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
	</bean>


	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.znz.model" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.znz.dao" />
	</bean>

	<!--
		Provides automatic CSRF token inclusion when using Spring MVC Form tags or Thymeleaf. See
		http://localhost:8080/#forms and form.jsp for examples
	-->
	<bean id="requestDataValueProcessor" class="org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor"/>
    <task:annotation-driven />
</beans>
